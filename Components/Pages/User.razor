@page "/user"
@using No1B.DTOs
@using No1B.Enums
@using No1B.Repositories
@inject IUserRepository UserRepository
@rendermode InteractiveServer

<PageTitle>User</PageTitle>

<h1>User</h1>

<table class="mt-5 table table-hover">
    <thead>
        <tr>
            <th scope="col">Role</th>
            <th scope="col">Name</th>
            <th scope="col">DateOfBirth</th>
            <th scope="col">Email</th>
            <th scope="col">PhoneNumber</th>
        </tr>
    </thead>
    <tbody class="table-group-divider">
        @if ((Users?.HttpStatusCode == HttpStatusCode.OK) && Users.Data != null)
        {
            @foreach (var item in Users.Data)
            {
                <tr>
                    @foreach (var role in item.Roles!)
                    {
                        <td><span class="badge text-bg-primary">@role.Name</span></td>
                    }
                    <td>@item.FirstName @item.LastName</td>
                    <td>@item.DateOfBirth?.ToShortDateString()</td>
                    <td>@item.Email</td>
                    <td>@item.PhoneNumber</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="3">Loading...</td>
            </tr>
        }
    </tbody>
</table>


@code {
    private Response<List<UserOutput>>? Users;

    protected override async Task OnInitializedAsync()
    {
        Users = await UserRepository.GetUsersWithRolesAsync();
    }
}